<?xml version="1.0" encoding="UTF-8"?>
<build-type xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" uuid="" xsi:noNamespaceSchemaLocation="https://www.jetbrains.com/teamcity/schemas/2021.1/project-config.xsd">
  <name>Full Build</name>
  <description />
  <settings>
    <options>
      <option name="artifactRules" value="deploy-server/stocks-server-*-any.pkg.tar.zst&#xA;&#xA;server/build/server.log&#xA;&#xA;client-app-android/build/reports/**/* =&gt; client-app-android&#xA;client-core/build/reports/**/* =&gt; client-core&#xA;client-crypto/build/reports/**/* =&gt; client-crypto&#xA;client-database-android/build/reports/**/* =&gt; client-database-android&#xA;client-fakes-android/build/reports/**/* =&gt; client-fakes-android&#xA;client-fakes/build/reports/**/* =&gt; client-fakes&#xA;client-navigation-android/build/reports/**/* =&gt; client-navigation-android&#xA;client-network/build/reports/**/* =&gt; client-network&#xA;client-settings-android/build/reports/**/* =&gt; client-settings-android&#xA;client-ui-android/build/reports/**/* =&gt; client-ui-android" />
      <option name="executionTimeoutMin" value="45" />
      <option name="maximumNumberOfBuilds" value="2" />
    </options>
    <disabled-settings>
      <setting-ref ref="TRIGGER_1" />
    </disabled-settings>
    <parameters>
      <param name="env.ANDROID_SERIAL" value="%env.ANDROID_DEVICE%" />
      <param name="env.CI_SERVER" value="1" />
    </parameters>
    <build-runners>
      <runner id="RUNNER_1" name="Assemble artifacts" type="gradle-runner">
        <parameters>
          <param name="teamcity.coverage.emma.include.source" value="true" />
          <param name="teamcity.coverage.emma.instr.parameters" value="-ix -*Test*" />
          <param name="teamcity.coverage.idea.includePatterns" value="*" />
          <param name="teamcity.coverage.jacoco.patterns" value="+:*" />
          <param name="teamcity.step.mode" value="default" />
          <param name="teamcity.tool.jacoco" value="%teamcity.tool.jacoco.DEFAULT%" />
          <param name="ui.gradleRUnner.gradle.build.file" value="build.gradle.kts" />
          <param name="ui.gradleRunner.gradle.home" value="/usr/bin/gradle" />
          <param name="ui.gradleRunner.gradle.stacktrace.enabled" value="true" />
          <param name="ui.gradleRunner.gradle.tasks.names" value="-Pprofile=teamcity check test connectedCheck assemble -x :server-test:test" />
          <param name="ui.gradleRunner.gradle.wrapper.path" value="." />
          <param name="ui.gradleRunner.gradle.wrapper.useWrapper" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_2" name="Package server" type="simpleRunner">
        <parameters>
          <param name="command.executable" value="makepkg" />
          <param name="command.parameters" value="-cf" />
          <param name="teamcity.build.workingDir" value="deploy-server" />
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="" />
        </parameters>
      </runner>
      <runner id="RUNNER_3" name="Clean server" type="simpleRunner">
        <parameters>
          <param name="command.executable" value="server-test/bin/clean-up.sh" />
          <param name="teamcity.step.mode" value="execute_always" />
          <param name="use.custom.script" value="" />
        </parameters>
      </runner>
      <runner id="RUNNER_4" name="Server Installation" type="simpleRunner">
        <parameters>
          <param name="command.executable" value="server-test/bin/vm-deployment-test.sh" />
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="" />
        </parameters>
      </runner>
      <runner id="RUNNER_5" name="Server System Test" type="gradle-runner">
        <parameters>
          <param name="teamcity.coverage.emma.include.source" value="true" />
          <param name="teamcity.coverage.emma.instr.parameters" value="-ix -*Test*" />
          <param name="teamcity.coverage.idea.includePatterns" value="*" />
          <param name="teamcity.coverage.jacoco.patterns" value="+:*" />
          <param name="teamcity.step.mode" value="default" />
          <param name="teamcity.tool.jacoco" value="%teamcity.tool.jacoco.DEFAULT%" />
          <param name="ui.gradleRUnner.gradle.build.file" value="build.gradle.kts" />
          <param name="ui.gradleRunner.gradle.home" value="/usr/bin/gradle" />
          <param name="ui.gradleRunner.gradle.stacktrace.enabled" value="true" />
          <param name="ui.gradleRunner.gradle.tasks.names" value=":server-test:test --rerun" />
          <param name="ui.gradleRunner.gradle.wrapper.path" value="." />
          <param name="ui.gradleRunner.gradle.wrapper.useWrapper" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_6" name="Server Log collection" type="simpleRunner">
        <parameters>
          <param name="command.executable" value="server-test/bin/collect-log.sh" />
          <param name="teamcity.step.mode" value="execute_always" />
          <param name="use.custom.script" value="" />
        </parameters>
      </runner>
    </build-runners>
    <vcs-settings>
      <vcs-entry-ref root-id="Stocks_HttpsGitlabComVeenjStocksGit" />
    </vcs-settings>
    <requirements>
      <exists id="RQ_1" name="env.POSTGRESQL_DB" />
      <exists id="RQ_2" name="env.DEPLOYMENT_VM" />
      <exists id="RQ_3" name="env.ANDROID_DEVICE" />
    </requirements>
    <build-triggers>
      <build-trigger id="TRIGGER_1" type="schedulingTrigger">
        <parameters>
          <param name="branchFilter" value="+:STOCKS-63" />
          <param name="cronExpression_dm" value="*" />
          <param name="cronExpression_dw" value="*" />
          <param name="cronExpression_hour" value="*" />
          <param name="cronExpression_min" value="4,14,24,34,44,54" />
          <param name="cronExpression_month" value="*" />
          <param name="cronExpression_sec" value="0" />
          <param name="cronExpression_year" value="*" />
          <param name="dayOfWeek" value="Sunday" />
          <param name="enableQueueOptimization" value="true" />
          <param name="hour" value="1" />
          <param name="minute" value="0" />
          <param name="promoteWatchedBuild" value="true" />
          <param name="revisionRule" value="lastFinished" />
          <param name="revisionRuleBuildBranch" value="+:&lt;default&gt;" />
          <param name="revisionRuleDependsOn" value="Stocks_Build" />
          <param name="schedulingPolicy" value="cron" />
          <param name="timezone" value="SERVER" />
          <param name="triggerBuildIfWatchedBuildChanges" value="" />
          <param name="triggerBuildWithPendingChangesOnly" value="" />
        </parameters>
      </build-trigger>
      <build-trigger id="vcsTrigger" type="vcsTrigger">
        <parameters>
          <param name="branchFilter" value="+:*" />
          <param name="enableQueueOptimization" value="true" />
          <param name="quietPeriodMode" value="DO_NOT_USE" />
        </parameters>
      </build-trigger>
    </build-triggers>
    <build-extensions>
      <extension id="BUILD_EXT_1" type="commit-status-publisher">
        <parameters>
          <param name="github_authentication_type" value="token" />
          <param name="github_host" value="https://j.njsm.de/git/api/v1" />
          <param name="publisherId" value="githubStatusPublisher" />
          <param name="secure:github_access_token" value="credentialsJSON:ce5c2c5e-5f08-45f3-8561-fd13780b9196" />
          <param name="vcsRootId" value="Stocks_HttpsGitlabComVeenjStocksGit" />
        </parameters>
      </extension>
    </build-extensions>
    <cleanup>
      <policy type="builds" cleanup-level="ARTIFACTS">
        <parameters>
          <param name="keepBuilds.count" value="100" />
        </parameters>
      </policy>
    </cleanup>
  </settings>
</build-type>

