- hosts: "{{ target_host | default('deployment-test')}}"

  vars:
      remote_mysql_password: ''
          
      stocks_base: /usr/share/stocks-server

      stocks_user: 'Jan'
      stocks_device: 'Laptop'

      sudoers_line: 'stocks ALL=NOPASSWD: /usr/lib/stocks-server/nginx-reload'

  remote_user: root
  tasks:
  - name: Start MariaDB
    service: >
        name=mysqld
        state=started

  - name: Setup database
    mysql_db: >
        name=stocks 
        state=present 
        login_user=root 
        login_password={{ remote_mysql_password }}

  - name: Setup database user
    mysql_user: >
        name=server
        password=linux 
        priv=stocks.*:ALL 
        state=present 
        login_user=root

  - name: Import database schema
    mysql_db: >
        name=stocks 
        state=import
        target={{ stocks_base }}/schema.sql

  - name: Create CA
    command: /usr/lib/stocks-server/setup-ca {{ stocks_base }}/root/CA {{ stocks_base }}
    become: yes
    become_user: stocks

  - name: Create CA download point
    copy: >
        src={{ stocks_base }}/root/CA/certs/ca.cert.pem
        dest={{ stocks_base }}/root/nginx/ca
        remote_src=True
        owner=stocks
        group=users

  - name: Create chain download point
    copy: >
        src={{ stocks_base }}/root/CA/intermediate/certs/ca-chain.cert.pem
        dest={{ stocks_base }}/root/nginx/chain
        remote_src=True
        owner=stocks
        group=users

  - name: Create nginx SSL
    file: >
        path=/etc/nginx/ssl state=directory

  - name: Copy CA cert
    copy: >
        src={{ stocks_base }}/root/CA/certs/ca.cert.pem
        dest=/etc/nginx/ssl/ca.cert.pem
        remote_src=True
        owner=root
        group=root

  - name: Copy CA chain
    copy: >
        src={{ stocks_base }}/root/CA/intermediate/certs/ca-chain.cert.pem
        dest=/etc/nginx/ssl/ca-chain.cert.pem
        remote_src=True
        owner=root
        group=root

  - name: Copy server cert
    copy: >
        src={{ stocks_base }}/root/CA/intermediate/certs/server.cert.pem
        dest=/etc/nginx/ssl/server.cert.pem
        remote_src=True
        owner=root
        group=root

  - name: Copy server key
    copy: >
        src={{ stocks_base }}/root/CA/intermediate/private/server.key.pem
        dest=/etc/nginx/ssl/server.key.pem
        remote_src=True
        owner=root
        group=root

  - name: Add nginx reload to sudoers
    shell: echo {{ sudoers_line }} >> /etc/sudoers

  - name: Install nginx config conservatively
    copy: >
        src={{ stocks_base }}/nginx.example.conf
        dest=/etc/nginx/nginx.conf
        remote_src=True
        owner=root
        group=root
        backup=True

  - name: Install tomcat config conservatively
    copy: >
        src={{ stocks_base }}/tomcat.xml
        dest=/etc/tomcat8/server.xml
        remote_src=True
        owner=root
        group=root
        backup=True

  - name: Start tomcat
    service: >
        name=tomcat8
        state=started

  - name: Start nginx server
    service: >
        name=nginx
        state=started

  - name: Create first user ticket
    shell: /usr/bin/mysql -u root -e "INSERT INTO User (name) VALUES ('{{ stocks_user }}');
                INSERT INTO User_device (name, belongs_to) VALUES ('{{ stocks_device }}', LAST_INSERT_ID());
                INSERT INTO Ticket (ticket, belongs_device) VALUES ('0000', LAST_INSERT_ID())" stocks
