# Maintainer: aliena <dairyman@njsm.de>
pkgname=stocks-server
pkgver=0.5
pkgrel=1
pkgdesc="Manages a household's stocks"
arch=('i686' 'x86_64')
url="https://github.com/F1rst-Unicorn/stocks"
license=('MIT')
depends=('jre8-openjdk'
         'java-environment'
         'nginx'
         'openssl'
         'mariadb'
         'tomcat8')
makedepends=('git'
             'maven')
branch=${STOCKSBRANCH:-master}
source=("git://www.github.com/F1rst-Unicorn/stocks#branch=$branch")
install=stocks-server.install
sha512sums=('SKIP')
backup=("etc/$pkgname/stocks.properties"
	"usr/lib/$pkgname/setup-ca")
		
prepare() {
    # Verify that the correct PKGBUILD is used to prevent version conflicts
    cd $srcdir/stocks/deploy-server
    
    OUTPUT=$(grep "pkgver=$pkgver" PKGBUILD || true)
    
    if [ -z $OUTPUT ]; then
        echo "Cloned PKGBUILD has different version"
        echo "Please use the same PKGBUILD for building as the branch actually has"
        exit 1
    fi    
}

build() {
    cd "$srcdir/stocks"
    
    cd server
    mvn -Dmaven.test.skip=true clean package
    cd ..

    cd sentry
    mvn -Dmaven.test.skip=true clean package
    cd ..
}

package() {
    cd "$srcdir/stocks"
    
    mkdir -p $pkgdir/usr/share/$pkgname
    cp deploy-server/schema.sql $pkgdir/usr/share/$pkgname/schema.sql
    cp deploy-server/nginx.conf $pkgdir/usr/share/$pkgname/nginx.example.conf
    cp deploy-server/tomcat-server.xml $pkgdir/usr/share/$pkgname/tomcat.xml
    
    mkdir -p $pkgdir/usr/share/$pkgname/root/CA/intermediate
    mkdir -p $pkgdir/usr/share/$pkgname/root/nginx
    cp deploy-server/openssl.cnf $pkgdir/usr/share/$pkgname
    cp deploy-server/openssl_intermediate.cnf $pkgdir/usr/share/$pkgname
    
    mkdir -p $pkgdir/usr/lib/$pkgname
    cp deploy-server/setup-ca $pkgdir/usr/lib/$pkgname/
    cp deploy-server/nginx-reload $pkgdir/usr/lib/$pkgname/
    chmod -R 755 $pkgdir/usr/lib/$pkgname

    mkdir -p $pkgdir/usr/share/$pkgname/root/{server,sentry}
    cp server/target/server-*.war $pkgdir/usr/share/$pkgname/root/server
    cp sentry/target/sentry-*.war $pkgdir/usr/share/$pkgname/root/sentry
    
    mkdir -p $pkgdir/etc/$pkgname/
    cp deploy-server/stocks.properties $pkgdir/etc/$pkgname
    
    mkdir -p $pkgdir/usr/share/doc/$pkgname
    cp README.md $pkgdir/usr/share/doc/$pkgname
    cp -r manual $pkgdir/usr/share/doc/$pkgname
    chmod -R 755 $pkgdir/usr/share/doc/$pkgname
    
    mkdir -p $pkgdir/usr/share/licenses/$pkgname/
    cp LICENSE.md $pkgdir/usr/share/licenses/$pkgname/
    
    mkdir -p $pkgdir/var/log/$pkgname
    touch $pkgdir/var/log/$pkgname/stocks.log
}
