/* stocks is client-server program to manage a household's food stock
 * Copyright (C) 2019  The stocks developers
 *
 * This file is part of the stocks program suite.
 *
 * stocks is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * stocks is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

apply plugin: 'com.android.application'
apply plugin: "androidx.navigation.safeargs"
String customGeneratedSources = "generated/source/custom/"

android {

    compileSdkVersion 29
    buildToolsVersion "30.0.2"
    defaultConfig {
        applicationId "de.njsm.stocks"
        minSdkVersion 24
        targetSdkVersion 29
        versionCode 1
        versionName "3.13.0.2"
        multiDexEnabled true

        testInstrumentationRunner "de.njsm.stocks.android.test.system.util.TestRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation":
                                     "$projectDir/schemas".toString()]
            }
        }
    }
    sourceSets {
        main {
            java.srcDir "${buildDir}/${customGeneratedSources}"
        }
    }
    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            jniDebuggable true
        }
        release {
            debuggable false
            minifyEnabled false
        }
    }

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    testOptions {
        unitTests.returnDefaultValues = true
        unitTests.includeAndroidResources = true
    }
    lintOptions {
        checkAllWarnings true
        abortOnError false
        lintConfig file("lint.xml")
    }
    dexOptions {
        javaMaxHeapSize "4g"
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/LICENSE.md'
        exclude 'META-INF/LICENSE-notice.md'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'

    implementation "androidx.room:room-runtime:2.3.0"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    annotationProcessor "androidx.room:room-compiler:2.3.0"
    implementation "androidx.paging:paging-runtime:2.1.2"
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation "androidx.lifecycle:lifecycle-common-java8:2.3.1"
    implementation "androidx.navigation:navigation-fragment:2.3.5"
    implementation "androidx.navigation:navigation-ui:2.3.5"
    implementation "androidx.appcompat:appcompat:1.2.0"
    implementation 'javax.inject:javax.inject:1'
    implementation "org.functionaljava:functionaljava_1.8:4.8.1"
    implementation "org.functionaljava:functionaljava-java8:4.8.1"
    implementation "com.google.dagger:dagger:2.22.1"
    implementation "com.google.dagger:dagger-android:2.22.1"
    implementation "com.google.dagger:dagger-android-support:2.22.1"
    implementation 'com.github.requery:sqlite-android:3.35.5'
    annotationProcessor "com.google.dagger:dagger-compiler:2.22.1"
    annotationProcessor "com.google.dagger:dagger-android-processor:2.22.1"
    implementation 'androidx.recyclerview:recyclerview:1.2.0'
    implementation 'androidx.preference:preference:1.1.1'
    implementation "com.google.android.material:material:1.3.0"
    implementation 'androidx.test.espresso:espresso-idling-resource:3.3.0'
    implementation 'androidx.test.espresso.idling:idling-concurrent:3.4.0-alpha05'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.constraintlayout:constraintlayout-solver:2.0.4'
    implementation 'com.google.zxing:core:3.4.0'
    implementation 'com.journeyapps:zxing-android-embedded:2.0.1@aar'
    implementation 'com.journeyapps:zxing-android-legacy:2.0.1@aar'
    implementation 'com.journeyapps:zxing-android-integration:2.0.1@aar'
    implementation 'commons-io:commons-io:2.6'
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'com.squareup.retrofit2:converter-jackson:2.5.0'
    implementation 'org.bouncycastle:bcprov-jdk15on:1.65'
    implementation 'org.bouncycastle:bcpkix-jdk15on:1.65'
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation('de.njsm.stocks:common:1.1.0') {
        exclude group: "org.functionaljava", module: "functionaljava"
        exclude group: "org.functionaljava", module: "functionaljava-java8"
    }

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.27.0'
    testImplementation 'androidx.test:core:1.3.0'
    testImplementation "androidx.room:room-testing:2.3.0"
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation 'androidx.test:runner:1.3.0'
    testImplementation 'androidx.test:rules:1.3.0'
    testImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    testImplementation 'androidx.test.espresso:espresso-intents:3.3.0'
    testImplementation 'androidx.test.ext:junit:1.1.2'
    testImplementation 'org.robolectric:robolectric:4.5.1'

    androidTestImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.3.0'
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'org.mockito:mockito-core:2.27.0'
    androidTestImplementation "androidx.navigation:navigation-testing:2.3.5"
    androidTestAnnotationProcessor "com.google.dagger:dagger-compiler:2.22.1"

}

task generateSqlSnippets(type: Exec) {
    outputs.dir("${buildDir}/${customGeneratedSources}")
    inputs.file('bin/generate_sql.sh')
    mkdir "${buildDir}/${customGeneratedSources}"
    commandLine('bin/generate_sql.sh', "${buildDir}/${customGeneratedSources}/de/njsm/stocks/android/db/entities/Sql.java")
}

tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn generateSqlSnippets
}
